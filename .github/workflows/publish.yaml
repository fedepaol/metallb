name: Publish

on:
  push:
    branches:
      - 'main'
      - 'v.*'
    tags:
      - '.*'
  pull_request:
    branches:
      - 'main'

jobs:
  publish:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image: [controller, speaker, mirror-server]
        arch: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip arping ndisc6
          sudo pip3 install invoke semver pyyaml
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Run unit tests
        run: |
          inv test

      - name: Run linter
        run: |
          inv checkpatch
          inv lint -e host
          inv verifylicense

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Build ${{ matrix.image }} binary and image
        run: |
          inv build --binaries=${{ matrix.image }} --registry=quay.io --repo=metallb --tag=test --architectures=${{ matrix.arch }}

      - name: Login to Quay.io container registry
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Extract docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: quay.io/metallb/${{ matrix.image }}
          tags: |
            type=raw,value=test-${{ matrix.arch }}

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.image }}/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

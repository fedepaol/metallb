name: Publish
on:
  push:
    branches:
      - v*
    tags:
      - v*

jobs:

  publish-images:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write # needed for signing the images with GitHub OIDC Token
    strategy:
      fail-fast: true
      matrix:
        image: [speaker, controller, configmaptocrs]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.13.1"

      - name: Code checkout
        uses: actions/checkout@v3

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Docker meta ${{ matrix.image }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            quay.io/metallb/${{ matrix.image }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{raw}}
          labels: |
            org.opencontainers.image.title=${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.image }} for metallb, a network load-balancer implementation for Kubernetes using standard routing protocols

      - name: Build and push ${{ matrix.image }}
        uses: docker/build-push-action@v4
        id: build-and-push
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{matrix.image}}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le,linux/arm/v7
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          build-args: |
            GIT_BRANCH: ${{ github.ref_name }}
            GIT_COMMIT: ${{ github.sha }}

      - name: Cosign sign tags
        run: cosign sign ${TAGS}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
          COSIGN_EXPERIMENTAL: 1
